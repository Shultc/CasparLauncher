<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CasparLauncher">

    <Color x:Key="ColorLightBackground">#2C2C2C</Color>
    <Color x:Key="ColorBackground">#1B1B1B</Color>
    <Color x:Key="ColorForeground">#FFFFFF</Color>
    <Color x:Key="ColorBorderBrushNormal">#545454</Color>

    <Color x:Key="ColorBackgroundNormal">#3F3F3F</Color>
    <Color x:Key="ColorBackgroundLoaded">#695930</Color>
    <Color x:Key="ColorBackgroundPlaying">#693034</Color>
    <Color x:Key="ColorBackgroundScheduled">#3e304d</Color>

    <Color x:Key="ColorBackgroundHighlighted">#545454</Color>
    <Color x:Key="ColorBackgroundHighlightedLoaded">#9C7C2C</Color>
    <Color x:Key="ColorBackgroundHighlightedPlaying">#983c3c</Color>
    <Color x:Key="ColorBackgroundHighlightedScheduled">#5c3e7e</Color>

    <Color x:Key="ColorBorderBrushHighlighted">#7E7E7E</Color>
    <Color x:Key="ColorBorderBrushHighlightedLoaded">#83671d</Color>
    <Color x:Key="ColorBorderBrushHighlightedPlaying">#D27272</Color>
    <Color x:Key="ColorBorderBrushHighlightedScheduled">#8e60c3</Color>

    <Color x:Key="ColorBackgroundSelected">#1E4E8E</Color>
    <Color x:Key="ColorBackgroundSelectedLoaded">#AA8018</Color>
    <Color x:Key="ColorBackgroundSelectedPlaying">#A41819</Color>
    <Color x:Key="ColorBackgroundSelectedScheduled">#632aa5</Color>

    <Color x:Key="ColorBorderBrushSelected">#2a78e7</Color>
    <Color x:Key="ColorBorderBrushSelectedLoaded">#FFBB45</Color>
    <Color x:Key="ColorBorderBrushSelectedPlaying">#FF5555</Color>
    <Color x:Key="ColorBorderBrushSelectedScheduled">#a75aff</Color>


    <Color x:Key="ColorTextBoxBackground">#333333</Color>
    <Color x:Key="ColorTextBoxBackgroundSelected">#3F3F3F</Color>







    <!-- MAIN COLORS -->
    <SolidColorBrush x:Key="LightBackground" Color="{StaticResource ColorLightBackground}" />
    <SolidColorBrush x:Key="Background" Color="{StaticResource ColorBackground}" />
    <SolidColorBrush x:Key="Foreground" Color="{StaticResource ColorForeground}" />
    <SolidColorBrush x:Key="BorderBrushNormal" Color="{StaticResource ColorBorderBrushNormal}" />


    <!-- NORMAL -->

    <SolidColorBrush x:Key="BackgroundNormal" Color="{StaticResource ColorBackgroundNormal}" />
    <SolidColorBrush x:Key="BackgroundLoaded" Color="{StaticResource ColorBackgroundLoaded}" />
    <SolidColorBrush x:Key="BackgroundPlaying" Color="{StaticResource ColorBackgroundPlaying}" />
    <SolidColorBrush x:Key="BackgroundScheduled" Color="{StaticResource ColorBackgroundScheduled}" />

    <!-- HIGHLIGHTED -->
    <SolidColorBrush x:Key="BackgroundHighlighted" Color="{StaticResource ColorBackgroundHighlighted}" />
    <SolidColorBrush x:Key="BorderBrushHighlighted" Color="{StaticResource ColorBorderBrushHighlighted}" />

    <SolidColorBrush x:Key="BackgroundHighlightedLoaded" Color="{StaticResource ColorBackgroundHighlightedLoaded}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedLoaded" Color="{StaticResource ColorBorderBrushHighlightedLoaded}" />

    <SolidColorBrush x:Key="BackgroundHighlightedPlaying" Color="{StaticResource ColorBackgroundHighlightedPlaying}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedPlaying" Color="{StaticResource ColorBorderBrushHighlightedPlaying}" />

    <SolidColorBrush x:Key="BackgroundHighlightedScheduled" Color="{StaticResource ColorBackgroundHighlightedScheduled}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedScheduled" Color="{StaticResource ColorBorderBrushHighlightedScheduled}" />

    <!-- SELECTED -->
    <SolidColorBrush x:Key="BackgroundSelected" Color="{StaticResource ColorBackgroundSelected}" />
    <SolidColorBrush x:Key="BorderBrushSelected" Color="{StaticResource ColorBorderBrushSelected}" />

    <SolidColorBrush x:Key="BackgroundSelectedLoaded" Color="{StaticResource ColorBackgroundSelectedLoaded}" />
    <SolidColorBrush x:Key="BorderBrushSelectedLoaded" Color="{StaticResource ColorBorderBrushSelectedLoaded}" />

    <SolidColorBrush x:Key="BackgroundSelectedPlaying" Color="{StaticResource ColorBackgroundSelectedPlaying}" />
    <SolidColorBrush x:Key="BorderBrushSelectedPlaying" Color="{StaticResource ColorBorderBrushSelectedPlaying}" />

    <SolidColorBrush x:Key="BackgroundSelectedScheduled" Color="{StaticResource ColorBackgroundSelectedScheduled}" />
    <SolidColorBrush x:Key="BorderBrushSelectedScheduled" Color="{StaticResource ColorBorderBrushSelectedScheduled}" />




    <!-- GROUP COLORS -->

    <!-- GREEN -->
    <Color x:Key="ColorBackgroundGreen">#284431</Color>
    <Color x:Key="ColorBackgroundHighlightedGreen">#2c663f</Color>
    <Color x:Key="ColorBorderBrushHighlightedGreen">#518d65</Color>
    <Color x:Key="ColorBackgroundSelectedGreen">#007c29</Color>
    <Color x:Key="ColorBorderBrushSelectedGreen">#38e873</Color>

    <SolidColorBrush x:Key="BackgroundGreen" Color="{StaticResource ColorBackgroundGreen}" />
    <SolidColorBrush x:Key="BackgroundHighlightedGreen" Color="{StaticResource ColorBackgroundHighlightedGreen}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedGreen" Color="{StaticResource ColorBorderBrushHighlightedGreen}" />
    <SolidColorBrush x:Key="BackgroundSelectedGreen" Color="{StaticResource ColorBackgroundSelectedGreen}" />
    <SolidColorBrush x:Key="BorderBrushSelectedGreen" Color="{StaticResource ColorBorderBrushSelectedGreen}" />

    <!-- BLUE -->
    <Color x:Key="ColorBackgroundBlue">#1e2446</Color>
    <Color x:Key="ColorBackgroundHighlightedBlue">#202e71</Color>
    <Color x:Key="ColorBorderBrushHighlightedBlue">#2d4adc</Color>
    <Color x:Key="ColorBackgroundSelectedBlue">#1730ac</Color>
    <Color x:Key="ColorBorderBrushSelectedBlue">#264aff</Color>

    <SolidColorBrush x:Key="BackgroundBlue" Color="{StaticResource ColorBackgroundBlue}" />
    <SolidColorBrush x:Key="BackgroundHighlightedBlue" Color="{StaticResource ColorBackgroundHighlightedBlue}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedBlue" Color="{StaticResource ColorBorderBrushHighlightedBlue}" />
    <SolidColorBrush x:Key="BackgroundSelectedBlue" Color="{StaticResource ColorBackgroundSelectedBlue}" />
    <SolidColorBrush x:Key="BorderBrushSelectedBlue" Color="{StaticResource ColorBorderBrushSelectedBlue}" />

    <!-- ORANGE -->
    <Color x:Key="ColorBackgroundOrange">#613c23</Color>
    <Color x:Key="ColorBackgroundHighlightedOrange">#9a4e1c</Color>
    <Color x:Key="ColorBorderBrushHighlightedOrange">#db8246</Color>
    <Color x:Key="ColorBackgroundSelectedOrange">#d15400</Color>
    <Color x:Key="ColorBorderBrushSelectedOrange">#ff8e42</Color>

    <SolidColorBrush x:Key="BackgroundOrange" Color="{StaticResource ColorBackgroundOrange}" />
    <SolidColorBrush x:Key="BackgroundHighlightedOrange" Color="{StaticResource ColorBackgroundHighlightedOrange}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedOrange" Color="{StaticResource ColorBorderBrushHighlightedOrange}" />
    <SolidColorBrush x:Key="BackgroundSelectedOrange" Color="{StaticResource ColorBackgroundSelectedOrange}" />
    <SolidColorBrush x:Key="BorderBrushSelectedOrange" Color="{StaticResource ColorBorderBrushSelectedOrange}" />

    <!-- CYAN -->
    <Color x:Key="ColorBackgroundCyan">#224848</Color>
    <Color x:Key="ColorBackgroundHighlightedCyan">#226565</Color>
    <Color x:Key="ColorBorderBrushHighlightedCyan">#59abab</Color>
    <Color x:Key="ColorBackgroundSelectedCyan">#008080</Color>
    <Color x:Key="ColorBorderBrushSelectedCyan">#00cccc</Color>

    <SolidColorBrush x:Key="BackgroundCyan" Color="{StaticResource ColorBackgroundCyan}" />
    <SolidColorBrush x:Key="BackgroundHighlightedCyan" Color="{StaticResource ColorBackgroundHighlightedCyan}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedCyan" Color="{StaticResource ColorBorderBrushHighlightedCyan}" />
    <SolidColorBrush x:Key="BackgroundSelectedCyan" Color="{StaticResource ColorBackgroundSelectedCyan}" />
    <SolidColorBrush x:Key="BorderBrushSelectedCyan" Color="{StaticResource ColorBorderBrushSelectedCyan}" />

    <!-- MAGENTA -->
    <Color x:Key="ColorBackgroundMagenta">#542c54</Color>
    <Color x:Key="ColorBackgroundHighlightedMagenta">#843884</Color>
    <Color x:Key="ColorBorderBrushHighlightedMagenta">#cc58cc</Color>
    <Color x:Key="ColorBackgroundSelectedMagenta">#b517b5</Color>
    <Color x:Key="ColorBorderBrushSelectedMagenta">#ff59ff</Color>

    <SolidColorBrush x:Key="BackgroundMagenta" Color="{StaticResource ColorBackgroundMagenta}" />
    <SolidColorBrush x:Key="BackgroundHighlightedMagenta" Color="{StaticResource ColorBackgroundHighlightedMagenta}" />
    <SolidColorBrush x:Key="BorderBrushHighlightedMagenta" Color="{StaticResource ColorBorderBrushHighlightedMagenta}" />
    <SolidColorBrush x:Key="BackgroundSelectedMagenta" Color="{StaticResource ColorBackgroundSelectedMagenta}" />
    <SolidColorBrush x:Key="BorderBrushSelectedMagenta" Color="{StaticResource ColorBorderBrushSelectedMagenta}" />






    <VisualBrush x:Key="HatchBrush" TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute" Viewbox="0,0,10,10" ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Canvas>
                <Rectangle Fill="Azure" Width="10" Height="10" />
                <Path Stroke="Purple" Data="M 0 0 l 10 10" />
                <Path Stroke="Purple" Data="M 0 10 l 10 -10" />
            </Canvas>
        </VisualBrush.Visual>
    </VisualBrush>



    <!--Text Box-->
    <SolidColorBrush x:Key="TextBoxBackground" Color="{StaticResource ColorTextBoxBackground}" />

    <SolidColorBrush x:Key="TextBoxBackgroundSelected" Color="{StaticResource ColorTextBoxBackgroundSelected}" />

    <!--Search Text Box-->
    <SolidColorBrush x:Key="SearchTextForeground" Color="#999999" />

    <!--Link Button-->
    <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB" />
    <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF" />

    <!--Close Button-->
    <SolidColorBrush x:Key="CloseButtonBackgroundHighlighted" Color="#39ADFB" />
    <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="#084E7D" />
    <SolidColorBrush x:Key="CloseButtonStroke" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="CloseButtonStrokeHighlighted" Color="#FFFFFF" />

    <!--Menu-->
    <SolidColorBrush x:Key="MenuSeparatorBorderBrush" Color="#333337" />
    <SolidColorBrush x:Key="MenuItemHighlightedBackground" Color="#3E3E40" />
    <SolidColorBrush x:Key="SubmenuItemBackground" Color="#1B1B1C" />
    <SolidColorBrush x:Key="SubmenuItemBackgroundHighlighted" Color="#333334" />
    <SolidColorBrush x:Key="MenuDisabledForeground" Color="#656565" />

    <!--Scroll Bar-->
    <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted" Color="#05FFFFFF" />

    <CornerRadius x:Key="NormalRadius" TopLeft="5" TopRight="5" BottomLeft="5" BottomRight="5" />
    <CornerRadius x:Key="TopRadius" TopLeft="5" TopRight="5" BottomLeft="0" BottomRight="0" />
    <CornerRadius x:Key="BottomRadius" TopLeft="0" TopRight="0" BottomLeft="5" BottomRight="5" />

    <CornerRadius x:Key="CompactRadius" TopLeft="3" TopRight="3" BottomLeft="3" BottomRight="3" />
    <CornerRadius x:Key="TopCompactRadius" TopLeft="3" TopRight="3" BottomLeft="0" BottomRight="0" />
    <CornerRadius x:Key="BottomCompactRadius" TopLeft="0" TopRight="0" BottomLeft="3" BottomRight="3" />
    <CornerRadius x:Key="MenuCompactRadius" TopLeft="0" TopRight="3" BottomLeft="3" BottomRight="3" />

    <Style TargetType="Window" x:Key="StandardWindow">
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="FontFamily" Value="/Fonts/#Open Sans" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Foreground}" />
    </Style>

    <Style x:Key="StandardTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource StandardTextBlock}" />

    <DrawingBrush x:Key="TransparencyCheckerboard" Stretch="None" TileMode="Tile" Viewport="0,0,16,16" ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#383838">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,16,16" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#000000">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,8,8" />
                            <RectangleGeometry Rect="8,8,8,8" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="ThumbnailCheckerboard" Stretch="None" TileMode="Tile" Viewport="0,0,4,4" ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#00000000">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,4,4" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="#000000">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,2,2" />
                            <RectangleGeometry Rect="2,2,2,2" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="StandardToolTip" TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style TargetType="ToolTip" BasedOn="{StaticResource StandardToolTip}" />

    <Style x:Key="StandardButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True">
                        <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{StaticResource CompactRadius}">
                            <ContentPresenter x:Name="PART_Content" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource StandardButton}" />

    <Style x:Key="StandardToggleButton" TargetType="ToggleButton">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="{StaticResource CompactRadius}">
                        <Grid SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource StandardToggleButton}" />

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource LinkButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock><ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource LinkButtonForegroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" Background="{StaticResource BackgroundNormal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="2" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="{StaticResource CompactRadius}">
                            <Grid x:Name="markGrid">
                                <Viewbox>
                                    <Grid>
                                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="{StaticResource Foreground}" Margin="1" Opacity="0" Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource Foreground}" Margin="2" Opacity="0" />
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </Border>
                        <ContentPresenter TextBlock.Foreground="{StaticResource Foreground}" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 3" />
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border SnapsToDevicePixels="True" x:Name="Border" Grid.ColumnSpan="2" Background="{StaticResource BackgroundNormal}" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" CornerRadius="{StaticResource CompactRadius}" Padding="{TemplateBinding Padding}" />
            <Path x:Name="Arrow" Grid.Column="1" Opacity="0.6" Fill="{StaticResource Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="CornerRadius" Value="{StaticResource TopCompactRadius}" />
                <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BackgroundSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="StandardComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Margin="0" />
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" CaretBrush="{StaticResource Foreground}" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5,23,5" Focusable="True" Background="Transparent" Foreground="{StaticResource Foreground}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup VerticalOffset="-1" SnapsToDevicePixels="True" Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundNormal}" BorderThickness="1" BorderBrush="{StaticResource BorderBrushNormal}" CornerRadius="{StaticResource BottomCompactRadius}" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="40" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ComboBoxItem">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Name="Border" SnapsToDevicePixels="true" BorderThickness="1" CornerRadius="{StaticResource CompactRadius}">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}" />


    <Style x:Key="StandardDataGridTextColumn" TargetType="{x:Type DataGridTextColumn}">
        <Setter Property="ElementStyle">
            <Setter.Value>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="EditingElementStyle">
            <Setter.Value>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridTextColumn}" BasedOn="{StaticResource StandardDataGridTextColumn}" />

    <Style x:Key="StandardDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="{StaticResource CompactRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" Grid.ColumnSpan="2" Background="{StaticResource BackgroundSelected}" CornerRadius="{StaticResource CompactRadius}" />
                            <TextBlock Foreground="{StaticResource Foreground}" FontSize="12" FontWeight="SemiBold" TextAlignment="Left">
                                        <ContentPresenter Margin="3" VerticalAlignment="Center" />
                            </TextBlock>
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="{StaticResource Foreground}" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        </Grid>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource BackgroundNormal}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                        </MultiTrigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardDataGrid" TargetType="DataGrid">
        <!--<Setter Property="SelectionUnit" Value="Cell"/>-->
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="RowBackground" Value="{StaticResource LightBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border" SnapsToDevicePixels="True" Background="{StaticResource LightBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="{StaticResource CompactRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).
                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="Black" Margin="2">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}" Style="{DynamicResource {ComponentResourceKey 
                      ResourceId=DataGridSelectAllButtonStyle, 
                      TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, 
                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, 
                      RelativeSource={RelativeSource TemplatedParent}}" />

                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, 
                        RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DataGrid" BasedOn="{StaticResource StandardDataGrid}" />
    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource StandardDataGridColumnHeader}" />
    <Style TargetType="DataGridCell" BasedOn="{StaticResource StandardDataGridCell}" />

    <Style x:Key="StandardGroupBox" TargetType="GroupBox">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="{StaticResource NormalRadius}" />
                        <ContentPresenter ContentSource="Header" Margin="2" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GroupBox" BasedOn="{StaticResource StandardGroupBox}" />

    <Style x:Key="StandardListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Margin="0,0,0,4">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="{StaticResource CompactRadius}" />
                        <ContentPresenter Margin="8,5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlayingListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource BackgroundPlaying}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Margin="0,0,0,4">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True" CornerRadius="{StaticResource CompactRadius}" />
                        <ContentPresenter Margin="8,5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlightedPlaying}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlightedPlaying}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelectedPlaying}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelectedPlaying}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="{TemplateBinding Padding}" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Resources>
            <Style BasedOn="{StaticResource StandardListBoxItem}" TargetType="{x:Type ListBoxItem}" />
        </Style.Resources>
    </Style>
    <Style TargetType="ListBox" BasedOn="{StaticResource StandardListBox}" />
    <Style x:Key="SelectedContentIndexItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource StandardListBoxItem}">
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
    </Style>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="{StaticResource CompactRadius}">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Foreground}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ScrollBarPageButtonBackgroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="{StaticResource CompactRadius}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition />
                <RowDefinition Height="18" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 8 4 L 4 0 Z" Command="ScrollBar.LineUpCommand" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18" />
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Content="M 4 4 L 0 8 L 0 0 Z" Command="ScrollBar.LineRightCommand" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="StandardScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Margin" Value="5 0 0 0" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="18" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Margin" Value="0 5 0 0" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ScrollBar" BasedOn="{StaticResource StandardScrollBar}" />



    <Style TargetType="TextBox" x:Key="StandardTextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="CaretBrush" Value="{StaticResource BorderBrushSelected}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="{StaticResource CompactRadius}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" CanContentScroll="true" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BackgroundHighlighted}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <!--<Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Border Grid.Column="1" BorderThickness="0,1,1,1">
                                                <Border.BorderBrush>
                                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                                </Border.BorderBrush>
                                                <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                                            </Border>
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Grid.Column="1"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>-->
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="SearchTextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="CaretBrush" Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <TextBlock Foreground="{StaticResource SearchTextForeground}" Margin="5,0,0,0" VerticalAlignment="Center" Name="search" Text="Search ..." Visibility="Hidden" />
                        <ScrollViewer x:Name="PART_ContentHost" Margin="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextBox.Text" Value="">
                            <Setter TargetName="search" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TextBox.Text" Value="{x:Null}">
                            <Setter TargetName="search" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}" />
                            <Setter TargetName="search" Property="Foreground" Value="{StaticResource Foreground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}" />
                            <Setter TargetName="search" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}" />


    <Style TargetType="{x:Type TabItem}" x:Key="StandardTabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="{StaticResource TopRadius}">
                        <Grid SnapsToDevicePixels="true" Height="23">
                            <ContentPresenter ContentSource="Header" Margin="10,2,10,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <Button x:Name="CloseTabButton" Grid.Column="1" Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <Path x:Name="ButtonPath" Margin="2" Data="M0,0 L1,1 M0,1 L1,0" Stroke="{StaticResource CloseButtonStroke}" StrokeThickness="2" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false" />
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource CloseButtonBackgroundHighlighted}" />
                                                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStrokeHighlighted}" />
                                                        </Trigger>
                                                        <Trigger Property="TabControl.AllowDrop" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Background" Value="{StaticResource CloseButtonBackgroundPressed}" />
                                                            <Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource CloseButtonStroke}" />
                                                            <Setter TargetName="ButtonPath" Property="Margin" Value="2.5,2.5,1.5,1.5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundSelectedPlaying}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TabItem" BasedOn="{StaticResource StandardTabItem}" />

    <Style TargetType="{x:Type TabControl}" x:Key="StandardTabControl">
        <Setter Property="Margin" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource Background}" />
        <Setter Property="local:ScrollViewerHelper.ShiftWheelScrollsHorizontally" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="TabControlBorder" Background="Transparent" BorderThickness="0,0,0,3" BorderBrush="{StaticResource BackgroundSelected}" SnapsToDevicePixels="True">
                            <!--<TabPanel Name="HeaderPanel" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1"/>-->
                            <ScrollViewer Name="TabControlSV" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,-1">
                                <StackPanel Orientation="Horizontal" IsItemsHost="True"></StackPanel>
                            </ScrollViewer>
                        </Border>
                        <Border Grid.Row="1" Background="{TemplateBinding Background}" CornerRadius="{StaticResource BottomRadius}" />
                        <ContentPresenter Grid.Row="1" Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                            <Setter TargetName="TabControlBorder" Property="BorderBrush" Value="{StaticResource BackgroundSelectedPlaying}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StandardMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Border 1-->
                    <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="False" Padding="0 1" CornerRadius="{StaticResource CompactRadius}">
                        <Grid x:Name="Grid" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3" Width="14" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" x:Name="Icon" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" Margin="4 0 0 0" />
                            <Grid Grid.Column="0" x:Name="Check" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" Margin="0 5">
                                <Border Width="17" Margin="5 0 0 0" x:Name="checkBoxBorder" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" Background="{StaticResource BackgroundNormal}" Padding="2">
                                    <Grid x:Name="markGrid">
                                        <Viewbox>
                                            <Grid>
                                                <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="{StaticResource Foreground}" Margin="1" Stretch="None" Visibility="Hidden" />
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center" />
                            <ContentPresenter Grid.Column="2" Margin="30,1,8,1" x:Name="IGTHost" ContentSource="InputGestureText" VerticalAlignment="Center" />
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" HorizontalOffset="-1" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True">
                                <Grid Margin="0,0,5,5">
                                    <!--Border 2-->
                                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource MenuSeparatorBorderBrush}" BorderThickness="1" Background="{StaticResource SubmenuItemBackground}" SnapsToDevicePixels="True" CornerRadius="{StaticResource MenuCompactRadius}">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="2">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2" Color="Black" />
                                        </Border.Effect>
                                    </Border>
                                    <!--Border 3-->
                                    <Border Margin="1,0,0,0" x:Name="TransitionBorder" Width="0" Height="2" CornerRadius="{StaticResource MenuCompactRadius}" VerticalAlignment="Top" HorizontalAlignment="Left" Background="{StaticResource SubmenuItemBackground}" SnapsToDevicePixels="False" BorderThickness="1" BorderBrush="{StaticResource SubmenuItemBackground}" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2" />
                            <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,0,6,2" />
                            <Setter TargetName="Col0" Property="MinWidth" Value="0" />
                            <Setter TargetName="Col3" Property="Width" Value="Auto" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="10,3,0,3" />
                            <Setter TargetName="Border" Property="MinHeight" Value="22" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="TopLevelItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuItemHighlightedBackground}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="Role" Value="SubmenuItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackgroundHighlighted}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSubmenuOpen" Value="true" />
                                <Condition Property="Role" Value="TopLevelHeader" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SubmenuItemBackground}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuSeparatorBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="{StaticResource TopCompactRadius}" />
                        </MultiTrigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{StaticResource BackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="true">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StandardMenuItem}" />

    <Style TargetType="{x:Type Menu}" x:Key="StandardMenu">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{StaticResource MenuSeparatorBorderBrush}" BorderThickness="1" Margin="25,2,5,2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontStretch" Value="ExtraExpanded" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="Menu" BasedOn="{StaticResource StandardMenu}" />

    <Style TargetType="{x:Type ContextMenu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{StaticResource MenuSeparatorBorderBrush}" BorderThickness="1" Margin="25,0,0,0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StandardMenuItem}" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid ClipToBounds="False">
                        <Border x:Name="Border" Background="{StaticResource Background}" BorderThickness="1" BorderBrush="{StaticResource MenuSeparatorBorderBrush}" ClipToBounds="False">
                            <StackPanel Margin="2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Background" Value="{StaticResource Background}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
    </Style>



    <Style x:Key="SidebarTabControl" TargetType="TabControl" BasedOn="{StaticResource StandardTabControl}">
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="0 0 5 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource StandardTextBox}">
                <Setter Property="Padding" Value="5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 3" />
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource StandardComboBox}">
                <Setter Property="Padding" Value="5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 3" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="TabControl" BasedOn="{StaticResource StandardTabControl}" />


    <Style TargetType="GridSplitter">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
            </Trigger>
            <Trigger Property="ResizeDirection" Value="Columns">
                <Setter Property="Margin" Value="0 10" />
            </Trigger>
            <Trigger Property="ResizeDirection" Value="Rows">
                <Setter Property="Margin" Value="10 0" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="AppWindow" TargetType="Window" BasedOn="{StaticResource StandardWindow}">
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
    </Style>

    <Style x:Key="StandardStatusBar" TargetType="StatusBar">
        <Setter Property="Background" Value="{StaticResource Background}" />
    </Style>
    <Style x:Key="ExpandIcon" TargetType="Path">
        <Setter Property="Data" Value="M17.25,0.5L17.25,17.25L0.5,17.25z" />
        <Setter Property="Width" Value="6" />
        <Setter Property="Height" Value="6" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,3,0" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Fill" Value="{StaticResource Foreground}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="45" CenterX="5" CenterY="5" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CollapseIcon" TargetType="Path">
        <Setter Property="Data" Value="M17.25,0.5L17.25,17.25L0.5,17.25z" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Stroke" Value="#FF262626" />
        <Setter Property="StrokeThickness" Value="0.5" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Fill">
            <Setter.Value>
                <SolidColorBrush x:Name="IconColor" Color="{StaticResource IconColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="-45" CenterX="5" CenterY="5" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>




    <SolidColorBrush x:Key="ListBorder" Color="#828790" />



    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA" />
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource BackgroundNormal}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource BorderBrushNormal}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundHighlighted}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushHighlighted}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundSelected}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushSelected}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundNormal}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushNormal}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                <Border x:Name="TrackBackground" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" Background="{StaticResource BackgroundNormal}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundHighlighted}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushHighlighted}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundSelected}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushSelected}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource BackgroundNormal}" />
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource BorderBrushNormal}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4" />
                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4" />
                <Border x:Name="TrackBackground" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" Background="{StaticResource BackgroundNormal}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="StandardSlider" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource StandardSlider}"></Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="StandardScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource StandardScrollViewer}" />
    
</ResourceDictionary>